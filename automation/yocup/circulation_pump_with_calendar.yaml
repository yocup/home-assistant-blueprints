blueprint:
  name: Circulation Pump Control with Calendar
  description: >
    Turns a switch ON and OFF at specified times (only during active events)
    from two calendar entities. Also turns OFF at the end of the rental period.
  domain: automation
  input:
    calendar_1:
      name: First Calendar Entity
      selector:
        entity:
          domain: calendar
    calendar_2:
      name: Second Calendar Entity
      selector:
        entity:
          domain: calendar
    pump_switch:
      name: Switch or Input Boolean for Circulation Pump
      selector:
        entity:
          domain: input_boolean
    on_times:
      name: Turn ON Times (comma-separated, 24h format)
      description: >
        Comma-separated list of times to turn ON the pump (e.g., 08:00,15:00)
      default: ""
      selector:
        text:
    off_times:
      name: Turn OFF Times (comma-separated, 24h format)
      description: >
        Comma-separated list of times to turn OFF the pump (e.g., 12:00,21:00)
      default: ""
      selector:
        text:

mode: parallel

trigger:
  - platform: time_pattern
    minutes: "/1"
  - platform: state
    entity_id: !input calendar_1
    to: "off"
  - platform: state
    entity_id: !input calendar_2
    to: "off"

condition: []

action:
  - choose:
      # Turn ON at specific times IF any calendar is active
      - conditions:
          - condition: or
            conditions:
              - condition: state
                entity_id: !input calendar_1
                state: "on"
              - condition: state
                entity_id: !input calendar_2
                state: "on"
          - condition: template
            value_template: >
              {% set on_times = (blueprint.input.on_times or "").replace(" ", "").split(",") %}
              {{ now().strftime('%H:%M') in on_times }}
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: !input pump_switch

      # Turn OFF at specific times OR when both calendars are inactive
      - conditions:
          - condition: or
            conditions:
              - condition: template
                value_template: >
                  {% set off_times = (blueprint.input.off_times or "").replace(" ", "").split(",") %}
                  {{ now().strftime('%H:%M') in off_times }}
              - condition: and
                conditions:
                  - condition: state
                    entity_id: !input calendar_1
                    state: "off"
                  - condition: state
                    entity_id: !input calendar_2
                    state: "off"
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: !input pump_switch
